buildscript {
	ext {
		springBootVersion = "1.5.6.RELEASE"
		springCloudNetflixVersion = "1.3.2.RELEASE"
		springDependencyManagementVersion = "1.0.0.RELEASE"
		lombokVersion = "1.16.16"
		springfoxSwaggerVersion = "2.7.0"
		cucumberVersion = "1.2.5"

		useProxy = false
	}
	repositories {
		if(useProxy) {
			maven { url "http://nexus:8080/nexus/content/groups/public/" }
		} else {
			mavenCentral()
		}
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath "io.spring.gradle:dependency-management-plugin:{springDependencyManagementVersion}"
	}
}

subprojects {
	apply plugin: "java"
	apply plugin: "org.springframework.boot"
	apply plugin: "eclipse"
	apply plugin: "idea"
	apply plugin: "io.spring.dependency-management"

	version = version
	group = "org.lab.insurance"

	compileJava {
			sourceCompatibility = 1.8
			targetCompatibility = 1.8
			options.encoding = "UTF-8"
	}
	repositories {
		if(useProxy) {
			maven { url "http://nexus:8080/nexus/content/groups/public/" }
		} else {
			mavenCentral()
		}
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-netflix:${springCloudNetflixVersion}"
		}
	}

	dependencies {
		compile "org.projectlombok:lombok:${lombokVersion}"
		testCompile "org.springframework.boot:spring-boot-starter-test"
	}
	// exclude version in jar file (tmp for docker-compose)
	jar.archiveName = "${jar.baseName}.${jar.extension}"
}

configure(subprojects.findAll {it.name.endsWith("-core")}) {
	dependencies {
		compile project(":insurance-domain")
		compile project(":insurance-common")
		compile "org.springframework.boot:spring-boot-starter-integration"
		compile "org.springframework.boot:spring-boot-starter-amqp"
		compile "org.springframework.integration:spring-integration-amqp"
		compile "org.springframework.integration:spring-integration-mongodb"
		compile "org.springframework.integration:spring-integration-java-dsl"
		compile "org.springframework.cloud:spring-cloud-config-client"
		compile "org.springframework.cloud:spring-cloud-starter-eureka"
		compile "org.springframework.cloud:spring-cloud-starter-feign"
	}
}
configure(subprojects.findAll {it.name.endsWith("-gateway")}) {
	dependencies {
		compile project(":insurance-domain")
		compile "org.springframework.boot:spring-boot-starter-web"
		compile "org.springframework.boot:spring-boot-starter-integration"
		compile "org.springframework.boot:spring-boot-starter-amqp"
		compile "org.springframework.integration:spring-integration-amqp"
		compile "org.springframework.cloud:spring-cloud-config-client"
		compile "org.springframework.cloud:spring-cloud-starter-eureka"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"
	}
}

project(":insurance-domain") {
	dependencies {
		compile "org.springframework.boot:spring-boot-starter-data-mongodb"
		compile "io.springfox:springfox-swagger2:${springfoxSwaggerVersion}"
		compile "org.hibernate:hibernate-validator"
	}
	bootRepackage {
		enabled = false
	}
}

project(":insurance-common") {
	dependencies {
		compile project(":insurance-domain")
		compile "joda-time:joda-time:2.9.9"
		compile "commons-io:commons-io:2.5"
	}
	bootRepackage {
		enabled = false
	}
}

project(":insurance-services") {
	dependencies {
		compile project(":insurance-common")

		// remove
		compile group: 'org.apache.camel', name: 'camel-guice', version: '2.19.2'
		compileOnly "javax.servlet:javax.servlet-api:3.0.1"
		testCompile group: 'junit', name: 'junit', version: '4.12'
	}
	bootRepackage {
		enabled = false
	}
}

// deprecated project
project(":insurance-engine-domain") {
	dependencies {
		compile project(":insurance-domain")
	}
	bootRepackage {
		enabled = false
	}
}

// deprecated project
project(":insurance-engine") {
	dependencies {
		compile project(":insurance-services")
		compile project(":insurance-engine-domain")

		// remove
		//compile "org.apache.camel:camel-guice:2.19.2"
		compile "org.apache.commons:commons-lang3:3.6"
	}
	bootRepackage {
		enabled = false
	}
}

// deprecated project
project(":insurance-bootstrap") {
	bootRepackage {
		enabled = false
	}
}

project(":insurance-eureka") {
	dependencies {
		compile "org.springframework.cloud:spring-cloud-starter-eureka-server"
		compile "org.springframework.cloud:spring-cloud-config-client"
	}
}

project(":insurance-cloud-config") {
	dependencies {
		compile "org.springframework.cloud:spring-cloud-config-server"
		compile "org.springframework.boot:spring-boot-starter-web"
	}
}

//deprecated
project(":insurance-ms-common") {
	dependencies {
		compile project(":insurance-common")
		compile "org.springframework.boot:spring-boot-starter-web"
		compile "org.springframework.boot:spring-boot-starter-integration"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.boot:spring-boot-starter-amqp"

		compile "org.springframework.integration:spring-integration-amqp"
		compile "org.springframework.integration:spring-integration-mongodb"
		compile "org.springframework.integration:spring-integration-java-dsl"


		compile "org.springframework.cloud:spring-cloud-config-client"
		compile "org.springframework.cloud:spring-cloud-starter-eureka"

		compile "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"
	}
	bootRepackage {
		enabled = false
	}
}

project(":insurance-contract-creation-core") {
}

project(":insurance-contract-creation-gateway") {
	dependencies {
		compile project(":insurance-contract-creation-core") 
	}
}

project(":insurance-contract-common-gateway") {
}

project(":insurance-asset-core") {
	dependencies {
		//compile "org.springframework.boot:spring-boot-starter-batch"
		//compile "de.flapdoodle.embed:de.flapdoodle.embed.mongo"
	}
}
project(":insurance-asset-gateway") {
	dependencies {
		compile "org.springframework.boot:spring-boot-starter-data-rest"
	}
}

project(":insurance-legal-entity-core") {
}

project(":insurance-legal-entity-gateway") {
}

project(":insurance-stop-loss") {
	dependencies {
		compile project(":insurance-ms-common")
	}
}

project(":insurance-portfolio-core") {
}

project(":insurance-portfolio-gateway") {
	//TODO error al resolver las dependencias
	dependencies {
		compile project(":insurance-portfolio-core")
		compile project(":insurance-domain")
		compile "org.springframework.boot:spring-boot-starter-web"
		compile "org.springframework.boot:spring-boot-starter-integration"
		compile "org.springframework.boot:spring-boot-starter-amqp"
		compile "org.springframework.integration:spring-integration-amqp"
		compile "org.springframework.cloud:spring-cloud-config-client"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"
	}
}

project(":insurance-payment-core") {
	dependencies {
		compile project(":insurance-ms-common")
	}
}

project(":insurance-broker-core") {
	dependencies {
		compile project(":insurance-ms-common")
	}
}

project(":insurance-order-gateway") {
	dependencies {
		compile project(":insurance-ms-common")
	}
}

project(":insurance-zuul") {
dependencies {
		compile "org.springframework.boot:spring-boot-starter"
		compile "org.springframework.boot:spring-boot-starter-web"
		compile "org.springframework.boot:spring-boot-starter-thymeleaf"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.cloud:spring-cloud-starter-zuul"
		compile "org.springframework.cloud:spring-cloud-config-client"
	}
}

project(":insurance-bdd") {
	dependencies {
		compile(project(":insurance-contract-creation-gateway")) {
			exclude group: "org.springframework.cloud"
		}
		testCompile "info.cukes:cucumber-junit:${cucumberVersion}"
		testCompile "info.cukes:cucumber-java:${cucumberVersion}"
		testCompile "info.cukes:cucumber-spring:${cucumberVersion}"
	}
	bootRepackage {
		enabled = false
	}
}
