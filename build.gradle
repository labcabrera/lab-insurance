buildscript {
  ext {
    springBootVersion = '2.0.1.RELEASE'
    springCloudVersion = 'Finchley.RELEASE'
    springVersion = '5.0.5.RELEASE'
    springIntegrationVersion = '5.0.4.RELEASE'

    awsSdkVersion = "1.11.298"
    lombokVersion = "1.16.20"
    springfoxSwaggerVersion = "2.8.0"
    cucumberVersion = "1.2.5"
  }
  repositories {
    mavenCentral()
  }
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

//apply plugin: 'org.springframework.boot'

subprojects {
  apply plugin: 'java'
  apply plugin: 'eclipse'
  apply plugin: 'io.spring.dependency-management'

  group = 'org.lab.insurance'
  version = '0.0.1-SNAPSHOT'
  sourceCompatibility = 1.8

  repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
  }
  dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
  }
  dependencyManagement {
    imports {
      mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
  }
}

// Domain model projects

project(":insurance-domain-core") {
  dependencies {
    compile "io.swagger:swagger-annotations:1.5.16"
    compile "org.hibernate:hibernate-validator:6.0.9.Final"
    compile "org.springframework.boot:spring-boot-starter-data-mongodb:${springBootVersion}"
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    compileOnly "com.fasterxml.jackson.core:jackson-annotations:2.9.0"
  }
}

project(":insurance-domain-action") {
  dependencies {
    compile project(":insurance-domain-core")
  }
}

project(":insurance-domain-hateoas") {
  dependencies {
    compile project(":insurance-domain-core")
    compile "org.springframework.boot:spring-boot-starter-hateoas:${springBootVersion}"
    compile "ma.glasnost.orika:orika-core:1.5.1"
  }
}

// Commons

project(":insurance-common") {
  dependencies {
    compile project(":insurance-domain-core")
    compile "joda-time:joda-time:2.9.9"
    compile "commons-io:commons-io:2.5"
    compile "org.apache.commons:commons-lang3:3.6"
    compileOnly "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    compile "org.springframework.integration:spring-integration-amqp:${springIntegrationVersion}"
  }
}

project(":insurance-engine-core") {
  dependencies {
    compile project(":insurance-domain-action")
    compile project(":insurance-common")
    compile "org.springframework.boot:spring-boot-starter-integration:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-amqp:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-integration:${springBootVersion}"
    compile "org.springframework.cloud:spring-cloud-config-client"
  }
}

// Microservices ---------------------------------------------------------------

project(":insurance-agreement-core") {
  apply plugin: 'org.springframework.boot'
  dependencies {
    compile(project(":insurance-domain-core"))
  }
}

project(":insurance-agreement-gateway") {
  apply plugin: "org.springframework.boot"
  dependencies {
    compile project(":insurance-common")
    compile project(":insurance-domain-hateoas")
    compile "org.springframework.boot:spring-boot-starter-data-rest"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-integration"
    compile "org.springframework.boot:spring-boot-starter-amqp"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-hateoas"
    compile "org.springframework.integration:spring-integration-amqp"
    compile "org.springframework.cloud:spring-cloud-config-client"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
    compile "io.springfox:springfox-swagger2:${springfoxSwaggerVersion}"
    compile "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"
    compile "org.springframework.data:spring-data-rest-hal-browser"
  }
}

project(":insurance-contract-common-gateway") {
  apply plugin: "org.springframework.boot"
  dependencies {
    compile project(":insurance-common")
    compile project(":insurance-domain-hateoas")
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-integration"
    compile "org.springframework.boot:spring-boot-starter-amqp"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-hateoas"
    compile "org.springframework.integration:spring-integration-amqp"
    compile "org.springframework.cloud:spring-cloud-config-client"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
    compile "io.springfox:springfox-swagger2:${springfoxSwaggerVersion}"
    compile "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"
  }
}

project(":insurance-contract-creation-core") {
  apply plugin: "org.springframework.boot"
  dependencies {
    compile project(":insurance-common")
    compile project(":insurance-domain-action")
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.cloud:spring-cloud-config-client')
    testCompile('org.springframework.boot:spring-boot-starter-test')
  }
  jar {
    enabled = true
  }
}

project(":insurance-contract-creation-gateway") {
  apply plugin: "org.springframework.boot"
  dependencies {
    compile project(":insurance-domain-hateoas")
    compile project(":insurance-contract-creation-core")
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-integration"
    compile "org.springframework.boot:spring-boot-starter-amqp"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-hateoas"
    compile "org.springframework.integration:spring-integration-amqp"
    compile "org.springframework.cloud:spring-cloud-config-client"
    compile "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client"
    compile "io.springfox:springfox-swagger2:${springfoxSwaggerVersion}"
    compile "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"
  }
}
project(":insurance-fee-core") {
  apply plugin: "org.springframework.boot"
  dependencies {
    compile project(":insurance-common")
    compile project(":insurance-domain-action")
    compile "com.amazonaws:aws-java-sdk:${awsSdkVersion}"
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.cloud:spring-cloud-config-client')
  }
}

project(":insurance-io") {
  apply plugin: "org.springframework.boot"
  dependencies {
    compile project(":insurance-common")
    compile project(":insurance-domain-action")
    compile "com.amazonaws:aws-java-sdk:${awsSdkVersion}"
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.cloud:spring-cloud-config-client')
  }
}

// Integration tests

/*
project(":insurance-bdd") {
  apply plugin: "org.springframework.boot"
  dependencies {
    compile "org.springframework.boot:spring-boot-starter"
    compile "org.projectlombok:lombok:${lombokVersion}"

    compile project(":insurance-domain-action")
    compile project(":insurance-engine-core")
    compile project(":insurance-contract-creation-core")
    compile project(":insurance-portfolio-core")
    compile project(":insurance-order-core")
    compile(project(":insurance-contract-creation-gateway")) {
      exclude group: "org.springframework.cloud"
      exclude group: "org.springframework.boot"
    }
    testCompile "info.cukes:cucumber-junit:${cucumberVersion}"
    testCompile "info.cukes:cucumber-java:${cucumberVersion}"
    testCompile "info.cukes:cucumber-spring:${cucumberVersion}"
    compile('org.springframework.boot:spring-boot-starter-data-mongodb')
    compile('org.springframework.boot:spring-boot-starter-integration')
    compile('org.springframework.boot:spring-boot-starter-amqp')
    compile('org.springframework.cloud:spring-cloud-config-client')
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-amqp"
    compile "org.springframework.boot:spring-boot-starter-hateoas"
    compile "org.springframework.integration:spring-integration-amqp"
    compile "org.springframework.cloud:spring-cloud-config-client"
    compile "io.springfox:springfox-swagger2:${springfoxSwaggerVersion}"
    compile "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.0"    
  }
}
*/
