buildscript {
	ext {
		springBootVersion = "1.5.6.RELEASE"
		springCloudNetflixVersion = "1.3.2.RELEASE"
		springDependencyManagementVersion = "1.0.0.RELEASE"
		lombokVersion = "1.16.16"
		springfoxSwaggerVersion = "2.7.0"
		bootstrapVersion = ""
		angularjsVersion = "1.6.4"
	}
	repositories {
		maven { url "http://nexus:8080/nexus/content/groups/public/" }
		//mavenCentral()
	}
	dependencies {
		classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
		classpath("io.spring.gradle:dependency-management-plugin:{springDependencyManagementVersion}")
	}
}

subprojects {
	apply plugin: "java"
	apply plugin: "org.springframework.boot"
	apply plugin: "eclipse"
	apply plugin: "idea"
	apply plugin: "io.spring.dependency-management"

	version = version
	group = "org.lab.insurance"

	compileJava {
			sourceCompatibility = 1.8
			targetCompatibility = 1.8
			options.encoding = "UTF-8"
	}
	repositories {
		maven { url "http://nexus:8080/nexus/content/groups/public/" }
		//mavenCentral()
	}

	dependencyManagement {
		imports {
			mavenBom "org.springframework.cloud:spring-cloud-netflix:${springCloudNetflixVersion}"
		}
	}

	dependencies {
		compile "org.projectlombok:lombok:${lombokVersion}"
		testCompile "org.springframework.boot:spring-boot-starter-test"
	}
}

project(":insurance-model") {
	dependencies {
		compile "org.springframework.boot:spring-boot-starter-data-jpa"
		compile "io.springfox:springfox-swagger2:${springfoxSwaggerVersion}"
		compile "javax.validation:validation-api:1.1.0.Final"
		compile "com.googlecode.lambdaj:lambdaj:2.3.3"
		compile "org.apache.commons:commons-lang3:3.6"
	}
	bootRepackage {
		enabled = false
	}
}


project(":insurance-core") {
	dependencies {
		compile project(":insurance-model")
		compile "joda-time:joda-time:2.9.9"

		// remove
		compile group: 'commons-io', name: 'commons-io', version: '2.5'
		compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
		compile group: 'org.liquibase', name: 'liquibase-core', version: '3.5.3'
		compile group: 'org.quartz-scheduler', name: 'quartz', version: '2.3.0'
		compile group: 'com.google.code.gson', name: 'gson', version: '2.8.1'



	}
	bootRepackage {
		enabled = false
	}
}


// ---------------------------

/*

project(":rm-engine-cloud-config") {
	dependencies {
		compile "org.springframework.cloud:spring-cloud-config-server"
		compile "org.springframework.boot:spring-boot-starter-web"
	}
}

project(":rm-engine-eureka") {
	dependencies {
		compile "org.springframework.cloud:spring-cloud-starter-eureka-server"
		compile "org.springframework.cloud:spring-cloud-config-client"
	}
}

configure(subprojects.findAll {it.name.startsWith("rm-engine-ms")}) {
	dependencies {
		compile project(":rm-engine-core")
		compile "org.springframework.boot:spring-boot-starter"
		compile "org.springframework.boot:spring-boot-starter-web"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.cloud:spring-cloud-config-client"
		compile "org.springframework.cloud:spring-cloud-starter-eureka"
		compile "io.springfox:springfox-swagger-ui:${springfoxSwaggerVersion}"
	}
}

project(":rm-engine-web") {
	dependencies {
		compile "org.springframework.boot:spring-boot-starter"
		compile "org.springframework.boot:spring-boot-starter-web"
		compile "org.springframework.boot:spring-boot-starter-thymeleaf"
		compile "org.springframework.boot:spring-boot-starter-actuator"
		compile "org.springframework.cloud:spring-cloud-starter-zuul"
		compile "org.springframework.cloud:spring-cloud-config-client"

		// webjars (temporal)
		compile "org.webjars:bootstrap:3.3.7"
		compile "org.webjars:angularjs:1.6.4"
		compile "org.webjars:jquery:3.2.0"
		compile "org.webjars:angular-ui-select:0.19.6"
	}
}
*/
